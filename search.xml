<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo基本命令</title>
      <link href="/2019/09/03/hexo-ji-ben-ming-ling/"/>
      <url>/2019/09/03/hexo-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p><code>$ hexo init [folder]</code></p><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><p><code>$ hexo new [layout] &lt;title&gt;</code></p><ul><li>layout: 对应网站目录/scaffolds/下面的md文件对应的类型(md文件名)，该目录下存放的是模板文件</li></ul><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left">draft</td><td align="left">source/_draft</td></tr><tr><td align="left">page</td><td align="left">source</td></tr><tr><td align="left">post</td><td align="left">source/_posts</td></tr></tbody></table><ul><li>hexo创建文件会根据这些模板文件进行文件生成</li></ul><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><p><code>$ hexo publish [layout] &lt;title&gt;</code><br>发布草稿</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><p><code>$ hexo generate</code><br>可以简写为:<br><code>$ hexo g</code><br>生成静态文件</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><p><code>$ hexo server --debug --config local.yml</code></p><ul><li>-p,–post 重设端口</li><li>–debug   调试模式</li><li>–config  指定自定义配置文件启动</li></ul><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><p><code>$ hexo deploy</code></p><ul><li>-g, –generate 部署前先生成静态文件</li></ul><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><p><code>$ hexo clean</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2019/08/31/markdown-yu-fa/"/>
      <url>/2019/08/31/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><pre class=" language-markdown"><code class="language-markdown">代码<span class="token title important"><span class="token punctuation">##</span> 二级标题</span></code></pre><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><pre class=" language-markdown"><code class="language-markdown">代码<span class="token title important"><span class="token punctuation">###</span> 三级标题</span></code></pre><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol><li>first</li><li>second</li><li>third</li></ol><pre class=" language-markdown"><code class="language-markdown">代码<span class="token list punctuation">1.</span> first<span class="token list punctuation">2.</span> second<span class="token list punctuation">3.</span> third</code></pre><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>first</li><li>second</li><li>third</li></ul><pre class=" language-markdown"><code class="language-markdown">代码<span class="token list punctuation">-</span> first<span class="token list punctuation">-</span> second<span class="token list punctuation">-</span> third</code></pre><h2 id="链接写法"><a href="#链接写法" class="headerlink" title="链接写法"></a>链接写法</h2><p><a href="https://qqallnice.github.io/blog" target="_blank" rel="noopener">yw’s blog</a></p><pre class=" language-markdown"><code class="language-markdown">代码<span class="token url">[yw's blog](https://qqallnice.github.io/blog)</span></code></pre><h2 id="链接写法-带标题"><a href="#链接写法-带标题" class="headerlink" title="链接写法(带标题)"></a>链接写法(带标题)</h2><p><a href="https://qqallnice.github.io/blog" title="yw’s blog" target="_blank" rel="noopener">yw’s blog</a></p><pre class=" language-markdown"><code class="language-markdown">代码<span class="token url">[yw's blog](https://qqallnice.github.io/blog <span class="token string">"yw’s blog"</span>)</span></code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg" alt=""></p><pre class=" language-markdown"><code class="language-markdown">代码![](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg)</code></pre><h2 id="图片带title"><a href="#图片带title" class="headerlink" title="图片带title"></a>图片带title</h2><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg" alt="blockchain" title="区块链"></p><pre class=" language-markdown"><code class="language-markdown">代码<span class="token url">![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg <span class="token string">"区块链"</span>)</span></code></pre><h2 id="句子引用"><a href="#句子引用" class="headerlink" title="句子引用"></a>句子引用</h2><blockquote><p>balabalabalabalabalabalabalabala</p></blockquote><pre class=" language-markdown"><code class="language-markdown">代码<span class="token blockquote punctuation">></span> balabalabalabalabalabalabalabala</code></pre><h2 id="段落引用"><a href="#段落引用" class="headerlink" title="段落引用"></a>段落引用</h2><blockquote><p>balabalabalabalabalabalabalabala<br>balabalabalabalabalabalabalabala<br>balabalabalabalabalabalabalabala<br>balabalabalabalabalabalabalabala</p></blockquote><pre class=" language-markdown"><code class="language-markdown">代码<span class="token blockquote punctuation">></span> balabalabalabalabalabalabalabala<span class="token blockquote punctuation">></span> balabalabalabalabalabalabalabala<span class="token blockquote punctuation">></span> balabalabalabalabalabalabalabala<span class="token blockquote punctuation">></span> balabalabalabalabalabalabalabala</code></pre><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a><strong>粗体</strong></h2><pre class=" language-markdown"><code class="language-markdown">代码<span class="token bold"><span class="token punctuation">**</span>粗体<span class="token punctuation">**</span></span>或者<span class="token bold"><span class="token punctuation">__</span>粗体<span class="token punctuation">__</span></span></code></pre><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a><em>斜体</em></h2><pre class=" language-markdown"><code class="language-markdown">代码<span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span>或者<span class="token italic"><span class="token punctuation">_</span>斜体<span class="token punctuation">_</span></span></code></pre><h2 id="粗体-斜体"><a href="#粗体-斜体" class="headerlink" title="粗体+斜体"></a><strong><em>粗体+斜体</em></strong></h2><pre class=" language-markdown"><code class="language-markdown">代码<span class="token bold"><span class="token punctuation">**</span>*粗体+斜体<span class="token punctuation">**</span></span>*</code></pre><h2 id="废弃的文字"><a href="#废弃的文字" class="headerlink" title="废弃的文字"></a><del>废弃的文字</del></h2><pre class=" language-markdown"><code class="language-markdown">代码~~废弃的文字~~</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>姓名</th><th>年龄</th><th align="center">三围</th></tr></thead><tbody><tr><td>张三</td><td>20</td><td align="center">12，21，21</td></tr><tr><td>张三</td><td>20</td><td align="center">12，21，21</td></tr><tr><td>张三</td><td>20</td><td align="center">12，21，21</td></tr></tbody></table><pre class=" language-markdown"><code class="language-markdown">代码| 姓名 | 年龄 | 三围 || --   |--- | :----: ||张三 | 20 |12，21，21||张三 | 20 |12，21，21||张三 | 20 |12，21，21|</code></pre><h2 id="代码行"><a href="#代码行" class="headerlink" title="代码行"></a>代码行</h2><p><code>hello world</code></p><pre class=" language-markdown"><code class="language-markdown">代码<span class="token code keyword">`hello world`</span></code></pre><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-markdown"><code class="language-markdown">代码```javaclass A{<span class="token code keyword">    public static void main(){</span><span class="token code keyword">        System.out.println("helloworld");</span><span class="token code keyword">    }</span>}```</code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><pre class=" language-markdown"><code class="language-markdown">代码<span class="token hr punctuation">***</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
